"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/stats/route";
exports.ids = ["app/api/admin/stats/route"];
exports.modules = {

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("better-sqlite3");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fstats%2Froute&page=%2Fapi%2Fadmin%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fstats%2Froute.ts&appDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fstats%2Froute&page=%2Fapi%2Fadmin%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fstats%2Froute.ts&appDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_surafellemma_Desktop_Fifi_Hair_Salon_app_api_admin_stats_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/admin/stats/route.ts */ \"(rsc)/./app/api/admin/stats/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/stats/route\",\n        pathname: \"/api/admin/stats\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/stats/route\"\n    },\n    resolvedPagePath: \"/Users/surafellemma/Desktop/Fifi Hair Salon/app/api/admin/stats/route.ts\",\n    nextConfigOutput,\n    userland: _Users_surafellemma_Desktop_Fifi_Hair_Salon_app_api_admin_stats_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/admin/stats/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhZG1pbiUyRnN0YXRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhZG1pbiUyRnN0YXRzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYWRtaW4lMkZzdGF0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnN1cmFmZWxsZW1tYSUyRkRlc2t0b3AlMkZGaWZpJTIwSGFpciUyMFNhbG9uJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnN1cmFmZWxsZW1tYSUyRkRlc2t0b3AlMkZGaWZpJTIwSGFpciUyMFNhbG9uJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN3QjtBQUNyRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpZmktaGFpci1zYWxvbi8/OWMzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvc3VyYWZlbGxlbW1hL0Rlc2t0b3AvRmlmaSBIYWlyIFNhbG9uL2FwcC9hcGkvYWRtaW4vc3RhdHMvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FkbWluL3N0YXRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vc3RhdHNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FkbWluL3N0YXRzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3N1cmFmZWxsZW1tYS9EZXNrdG9wL0ZpZmkgSGFpciBTYWxvbi9hcHAvYXBpL2FkbWluL3N0YXRzL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hZG1pbi9zdGF0cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fstats%2Froute&page=%2Fapi%2Fadmin%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fstats%2Froute.ts&appDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/admin/stats/route.ts":
/*!**************************************!*\
  !*** ./app/api/admin/stats/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var _lib_database_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/database-manager */ \"(rsc)/./lib/database-manager.ts\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n\n// Initialize database manager (auto-switches between SQLite and Supabase)\nconst db = _lib_database_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\nasync function GET(request) {\n    try {\n        // Get appointment statistics\n        const stats = await Promise.resolve(db.getStats());\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            stats\n        });\n    } catch (error) {\n        console.error(\"Error fetching statistics:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"Failed to fetch statistics\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FkbWluL3N0YXRzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyRDtBQUNKO0FBRXZELDBFQUEwRTtBQUMxRSxNQUFNRSxLQUFLRiw2REFBc0JBLENBQUNHLFdBQVc7QUFFdEMsZUFBZUMsSUFBSUMsT0FBb0I7SUFDN0MsSUFBSTtRQUNILDZCQUE2QjtRQUM3QixNQUFNQyxRQUFRLE1BQU1DLFFBQVFDLE9BQU8sQ0FBQ04sR0FBR08sUUFBUTtRQUUvQyxPQUFPUixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3hCSjtRQUNEO0lBRUQsRUFBRSxPQUFPSyxPQUFPO1FBQ2ZDLFFBQVFELEtBQUssQ0FBQyw4QkFBOEJBO1FBQzVDLE9BQU9WLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3ZCO1lBQUVDLE9BQU87UUFBNkIsR0FDdEM7WUFBRUUsUUFBUTtRQUFJO0lBRWhCO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maWZpLWhhaXItc2Fsb24vLi9hcHAvYXBpL2FkbWluL3N0YXRzL3JvdXRlLnRzPzgzNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVuaWZpZWREYXRhYmFzZU1hbmFnZXIgZnJvbSAnQC9saWIvZGF0YWJhc2UtbWFuYWdlcidcbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcblxuLy8gSW5pdGlhbGl6ZSBkYXRhYmFzZSBtYW5hZ2VyIChhdXRvLXN3aXRjaGVzIGJldHdlZW4gU1FMaXRlIGFuZCBTdXBhYmFzZSlcbmNvbnN0IGRiID0gVW5pZmllZERhdGFiYXNlTWFuYWdlci5nZXRJbnN0YW5jZSgpXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcblx0dHJ5IHtcblx0XHQvLyBHZXQgYXBwb2ludG1lbnQgc3RhdGlzdGljc1xuXHRcdGNvbnN0IHN0YXRzID0gYXdhaXQgUHJvbWlzZS5yZXNvbHZlKGRiLmdldFN0YXRzKCkpXG5cdFx0XG5cdFx0cmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgXG5cdFx0XHRzdGF0c1xuXHRcdH0pXG5cblx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBzdGF0aXN0aWNzOicsIGVycm9yKVxuXHRcdHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcblx0XHRcdHsgZXJyb3I6ICdGYWlsZWQgdG8gZmV0Y2ggc3RhdGlzdGljcycgfSxcblx0XHRcdHsgc3RhdHVzOiA1MDAgfVxuXHRcdClcblx0fVxufVxuIl0sIm5hbWVzIjpbIlVuaWZpZWREYXRhYmFzZU1hbmFnZXIiLCJOZXh0UmVzcG9uc2UiLCJkYiIsImdldEluc3RhbmNlIiwiR0VUIiwicmVxdWVzdCIsInN0YXRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJnZXRTdGF0cyIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/admin/stats/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database-manager.ts":
/*!*********************************!*\
  !*** ./lib/database-manager.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database */ \"(rsc)/./lib/database.ts\");\n/* harmony import */ var _database_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./database-supabase */ \"(rsc)/./lib/database-supabase.ts\");\n\n\n// Unified database manager that switches between SQLite and Supabase\nclass UnifiedDatabaseManager {\n    constructor(){\n        // Check if Supabase credentials are available\n        const useSupabase = process.env.USE_SUPABASE === \"true\" && process.env.SUPABASE_URL && process.env.SUPABASE_ANON_KEY;\n        if (useSupabase) {\n            console.log(\"\\uD83D\\uDCCA Using Supabase (Production database)\");\n            this.db = _database_supabase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getInstance();\n            this.isSupabase = true;\n        } else {\n            console.log(\"\\uD83D\\uDCE6 Using SQLite (Development database)\");\n            this.db = _database__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n            this.isSupabase = false;\n        }\n    }\n    static getInstance() {\n        if (!UnifiedDatabaseManager.instance) {\n            UnifiedDatabaseManager.instance = new UnifiedDatabaseManager();\n        }\n        return UnifiedDatabaseManager.instance;\n    }\n    // Wrapper methods that handle both sync and async\n    getAppointments(filters) {\n        if (this.isSupabase) {\n            return this.db.getAppointments(filters);\n        } else {\n            return this.db.getAppointments(filters);\n        }\n    }\n    getAppointmentById(id) {\n        if (this.isSupabase) {\n            return this.db.getAppointmentById(id);\n        } else {\n            return this.db.getAppointmentById(id);\n        }\n    }\n    createAppointment(data) {\n        if (this.isSupabase) {\n            return this.db.createAppointment(data);\n        } else {\n            return this.db.createAppointment(data);\n        }\n    }\n    updateAppointment(id, data) {\n        if (this.isSupabase) {\n            return this.db.updateAppointment(id, data);\n        } else {\n            return this.db.updateAppointment(id, data);\n        }\n    }\n    updateAppointmentStatus(id, status) {\n        if (this.isSupabase) {\n            return this.db.updateAppointmentStatus(id, status);\n        } else {\n            return this.db.updateAppointmentStatus(id, status);\n        }\n    }\n    deleteAppointment(id) {\n        if (this.isSupabase) {\n            return this.db.deleteAppointment(id);\n        } else {\n            return this.db.deleteAppointment(id);\n        }\n    }\n    getStats() {\n        if (this.isSupabase) {\n            return this.db.getStats();\n        } else {\n            return this.db.getStats();\n        }\n    }\n    close() {\n        if (!this.isSupabase) {\n            this.db.close();\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UnifiedDatabaseManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database-manager.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database-supabase.ts":
/*!**********************************!*\
  !*** ./lib/database-supabase.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\n// Service price mapping (same as SQLite version)\nconst SERVICE_PRICES = {\n    \"box-braids\": 120,\n    \"cornrows\": 80,\n    \"senegalese-twist\": 150,\n    \"goddess-braids\": 180,\n    \"dreadlocks\": 200,\n    \"hair-straightening\": 100,\n    \"weave-sewing\": 250,\n    \"wash-set\": 60,\n    \"silk-press\": 80,\n    \"afro-styling\": 70,\n    \"updo\": 90,\n    \"color-treatment\": 150,\n    \"hair-cut\": 50,\n    \"trim\": 25,\n    \"deep-conditioning\": 40,\n    \"blowout\": 45,\n    \"braid-removal\": 30,\n    \"hair-consultation\": 25\n};\n// Supabase Database Manager\nclass SupabaseDatabaseManager {\n    constructor(){\n        const supabaseUrl = process.env.SUPABASE_URL;\n        const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.SUPABASE_ANON_KEY;\n        if (!supabaseUrl || !supabaseKey) {\n            throw new Error(\"Supabase URL and Key must be set in environment variables\");\n        }\n        this.supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n    }\n    static getInstance() {\n        if (!SupabaseDatabaseManager.instance) {\n            SupabaseDatabaseManager.instance = new SupabaseDatabaseManager();\n        }\n        return SupabaseDatabaseManager.instance;\n    }\n    getServicePrice(serviceName) {\n        const normalizedService = serviceName.toLowerCase().replace(/\\s+/g, \"-\");\n        return SERVICE_PRICES[normalizedService] || 0;\n    }\n    validateAppointment(data) {\n        const errors = [];\n        if (data.firstName && (data.firstName.length === 0 || data.firstName.length > 50)) {\n            errors.push(\"First name must be between 1 and 50 characters\");\n        }\n        if (data.lastName && (data.lastName.length === 0 || data.lastName.length > 50)) {\n            errors.push(\"Last name must be between 1 and 50 characters\");\n        }\n        if (data.service && (data.service.length === 0 || data.service.length > 100)) {\n            errors.push(\"Service must be between 1 and 100 characters\");\n        }\n        if (data.servicePrice !== undefined && (data.servicePrice < 0 || data.servicePrice > 10000)) {\n            errors.push(\"Service price must be between $0 and $10,000\");\n        }\n        if (data.date && !/^\\d{4}-\\d{2}-\\d{2}$/.test(data.date)) {\n            errors.push(\"Date must be in YYYY-MM-DD format\");\n        }\n        if (data.time && !/^\\d{1,2}:\\d{2} [AP]M$/.test(data.time)) {\n            errors.push(\"Time must be in H:MM AM/PM or HH:MM AM/PM format\");\n        }\n        if (data.phone && (data.phone.length < 10 || data.phone.length > 20)) {\n            errors.push(\"Phone must be between 10 and 20 characters\");\n        }\n        if (data.email && (!data.email.includes(\"@\") || data.email.length > 100)) {\n            errors.push(\"Email must be valid and under 100 characters\");\n        }\n        if (data.notes && data.notes.length > 500) {\n            errors.push(\"Notes must be under 500 characters\");\n        }\n        if (data.status && ![\n            \"scheduled\",\n            \"completed\",\n            \"cancelled\",\n            \"no-show\"\n        ].includes(data.status)) {\n            errors.push(\"Status must be one of: scheduled, completed, cancelled, no-show\");\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    // Get all appointments with optional filtering\n    async getAppointments(filters) {\n        try {\n            let query = this.supabase.from(\"appointments\").select(\"*\");\n            if (filters?.date) {\n                query = query.eq(\"date\", filters.date);\n            }\n            if (filters?.status) {\n                query = query.eq(\"status\", filters.status);\n            }\n            const { data, error } = await query.order(\"date\", {\n                ascending: true\n            }).order(\"time\", {\n                ascending: true\n            });\n            if (error) throw error;\n            return data || [];\n        } catch (error) {\n            console.error(\"Error fetching appointments:\", error);\n            return [];\n        }\n    }\n    // Get appointment by ID\n    async getAppointmentById(id) {\n        try {\n            const { data, error } = await this.supabase.from(\"appointments\").select(\"*\").eq(\"id\", id).single();\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error(\"Error fetching appointment:\", error);\n            return null;\n        }\n    }\n    // Create new appointment\n    async createAppointment(data) {\n        const validation = this.validateAppointment(data);\n        if (!validation.isValid) {\n            return {\n                success: false,\n                errors: validation.errors\n            };\n        }\n        const id = Date.now().toString() + Math.random().toString(36).substr(2, 9);\n        const now = new Date().toISOString();\n        const appointmentData = {\n            id,\n            firstName: data.firstName.trim(),\n            lastName: data.lastName.trim(),\n            service: data.service.trim(),\n            servicePrice: data.servicePrice || this.getServicePrice(data.service),\n            date: data.date,\n            time: data.time,\n            phone: data.phone.trim(),\n            email: data.email.trim(),\n            notes: data.notes?.trim() || null,\n            status: data.status || \"scheduled\",\n            createdAt: now,\n            updatedAt: now\n        };\n        try {\n            const { data: result, error } = await this.supabase.from(\"appointments\").insert([\n                appointmentData\n            ]).select().single();\n            if (error) throw error;\n            return {\n                success: true,\n                appointment: result\n            };\n        } catch (error) {\n            console.error(\"Error creating appointment:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to create appointment\"\n                ]\n            };\n        }\n    }\n    // Update appointment\n    async updateAppointment(id, data) {\n        const validation = this.validateAppointment(data);\n        if (!validation.isValid) {\n            return {\n                success: false,\n                errors: validation.errors\n            };\n        }\n        const updateData = {\n            ...data,\n            updatedAt: new Date().toISOString()\n        };\n        // Sanitize string fields\n        if (data.firstName) updateData.firstName = data.firstName.trim();\n        if (data.lastName) updateData.lastName = data.lastName.trim();\n        if (data.service) updateData.service = data.service.trim();\n        if (data.phone) updateData.phone = data.phone.trim();\n        if (data.email) updateData.email = data.email.trim();\n        if (data.notes) updateData.notes = data.notes.trim();\n        try {\n            const { data: result, error } = await this.supabase.from(\"appointments\").update(updateData).eq(\"id\", id).select().single();\n            if (error) throw error;\n            if (!result) {\n                return {\n                    success: false,\n                    errors: [\n                        \"Appointment not found\"\n                    ]\n                };\n            }\n            return {\n                success: true,\n                appointment: result\n            };\n        } catch (error) {\n            console.error(\"Error updating appointment:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to update appointment\"\n                ]\n            };\n        }\n    }\n    // Update appointment status only\n    async updateAppointmentStatus(id, status) {\n        try {\n            const { data: result, error } = await this.supabase.from(\"appointments\").update({\n                status,\n                updatedAt: new Date().toISOString()\n            }).eq(\"id\", id).select().single();\n            if (error) throw error;\n            if (!result) {\n                return {\n                    success: false,\n                    errors: [\n                        \"Appointment not found\"\n                    ]\n                };\n            }\n            return {\n                success: true,\n                appointment: result\n            };\n        } catch (error) {\n            console.error(\"Error updating appointment status:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to update appointment status\"\n                ]\n            };\n        }\n    }\n    // Delete appointment\n    async deleteAppointment(id) {\n        try {\n            const { error } = await this.supabase.from(\"appointments\").delete().eq(\"id\", id);\n            if (error) throw error;\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Error deleting appointment:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to delete appointment\"\n                ]\n            };\n        }\n    }\n    // Get appointment statistics\n    async getStats() {\n        try {\n            const today = new Date().toISOString().split(\"T\")[0];\n            const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n            // Get all appointments\n            const { data: allAppointments, error: allError } = await this.supabase.from(\"appointments\").select(\"*\");\n            if (allError) throw allError;\n            // Calculate stats\n            const total = allAppointments?.length || 0;\n            const todayCount = allAppointments?.filter((a)=>a.date === today).length || 0;\n            const thisWeekCount = allAppointments?.filter((a)=>a.date >= weekAgo).length || 0;\n            const byStatus = allAppointments?.reduce((acc, apt)=>{\n                acc[apt.status] = (acc[apt.status] || 0) + 1;\n                return acc;\n            }, {}) || {};\n            const completedAppointments = allAppointments?.filter((a)=>a.status === \"completed\") || [];\n            const scheduledAppointments = allAppointments?.filter((a)=>a.status === \"scheduled\") || [];\n            const totalRevenue = completedAppointments.reduce((sum, apt)=>sum + (apt.servicePrice || 0), 0);\n            const todayRevenue = completedAppointments.filter((a)=>a.date === today).reduce((sum, apt)=>sum + (apt.servicePrice || 0), 0);\n            const thisWeekRevenue = completedAppointments.filter((a)=>a.date >= weekAgo).reduce((sum, apt)=>sum + (apt.servicePrice || 0), 0);\n            const pendingRevenue = scheduledAppointments.reduce((sum, apt)=>sum + (apt.servicePrice || 0), 0);\n            const todayPendingRevenue = scheduledAppointments.filter((a)=>a.date === today).reduce((sum, apt)=>sum + (apt.servicePrice || 0), 0);\n            const thisWeekPendingRevenue = scheduledAppointments.filter((a)=>a.date >= weekAgo).reduce((sum, apt)=>sum + (apt.servicePrice || 0), 0);\n            return {\n                total,\n                today: todayCount,\n                thisWeek: thisWeekCount,\n                byStatus,\n                totalRevenue,\n                todayRevenue,\n                thisWeekRevenue,\n                pendingRevenue,\n                todayPendingRevenue,\n                thisWeekPendingRevenue\n            };\n        } catch (error) {\n            console.error(\"Error fetching stats:\", error);\n            return {\n                total: 0,\n                today: 0,\n                thisWeek: 0,\n                byStatus: {},\n                totalRevenue: 0,\n                todayRevenue: 0,\n                thisWeekRevenue: 0,\n                pendingRevenue: 0,\n                todayPendingRevenue: 0,\n                thisWeekPendingRevenue: 0\n            };\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SupabaseDatabaseManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database-supabase.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Service price mapping\nconst SERVICE_PRICES = {\n    \"box-braids\": 120,\n    \"cornrows\": 80,\n    \"senegalese-twist\": 150,\n    \"goddess-braids\": 180,\n    \"dreadlocks\": 200,\n    \"hair-straightening\": 100,\n    \"weave-sewing\": 250,\n    \"wash-set\": 60,\n    \"silk-press\": 80,\n    \"afro-styling\": 70,\n    \"updo\": 90,\n    \"color-treatment\": 150,\n    \"hair-cut\": 50,\n    \"trim\": 25,\n    \"deep-conditioning\": 40,\n    \"blowout\": 45,\n    \"braid-removal\": 30,\n    \"hair-consultation\": 25\n};\n// Database utility class with security measures\nclass DatabaseManager {\n    constructor(){\n        // Create database in a secure location\n        const dbPath = (0,path__WEBPACK_IMPORTED_MODULE_1__.join)(process.cwd(), \"data\", \"appointments.db\");\n        // Ensure data directory exists\n        const fs = __webpack_require__(/*! fs */ \"fs\");\n        const dataDir = (0,path__WEBPACK_IMPORTED_MODULE_1__.join)(process.cwd(), \"data\");\n        if (!fs.existsSync(dataDir)) {\n            fs.mkdirSync(dataDir, {\n                recursive: true\n            });\n        }\n        // Initialize database with security settings\n        this.db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default())(dbPath, {\n            verbose:  true ? console.log : 0\n        });\n        // Enable WAL mode for better concurrency\n        this.db.pragma(\"journal_mode = WAL\");\n        // Enable foreign keys\n        this.db.pragma(\"foreign_keys = ON\");\n        // Set secure settings\n        this.db.pragma(\"secure_delete = ON\");\n        this.initializeTables();\n    }\n    static getInstance() {\n        if (!DatabaseManager.instance) {\n            DatabaseManager.instance = new DatabaseManager();\n        }\n        return DatabaseManager.instance;\n    }\n    initializeTables() {\n        // Create appointments table with proper constraints and security\n        const createAppointmentsTable = `\n      CREATE TABLE IF NOT EXISTS appointments (\n        id TEXT PRIMARY KEY,\n        firstName TEXT NOT NULL CHECK(length(firstName) > 0 AND length(firstName) <= 50),\n        lastName TEXT NOT NULL CHECK(length(lastName) > 0 AND length(lastName) <= 50),\n        service TEXT NOT NULL CHECK(length(service) > 0 AND length(service) <= 100),\n        servicePrice REAL NOT NULL CHECK(servicePrice >= 0),\n        date TEXT NOT NULL CHECK(date GLOB '[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]'),\n        time TEXT NOT NULL CHECK(time GLOB '[0-9]*:[0-9][0-9] [AP]M'),\n        phone TEXT NOT NULL CHECK(length(phone) >= 10 AND length(phone) <= 20),\n        email TEXT NOT NULL CHECK(email LIKE '%@%' AND length(email) <= 100),\n        notes TEXT CHECK(length(notes) <= 500),\n        status TEXT NOT NULL DEFAULT 'scheduled' CHECK(status IN ('scheduled', 'completed', 'cancelled', 'no-show')),\n        createdAt TEXT NOT NULL DEFAULT (datetime('now')),\n        updatedAt TEXT NOT NULL DEFAULT (datetime('now'))\n      )\n    `;\n        // Create index for better query performance\n        const createIndexes = `\n      CREATE INDEX IF NOT EXISTS idx_appointments_date ON appointments(date);\n      CREATE INDEX IF NOT EXISTS idx_appointments_status ON appointments(status);\n      CREATE INDEX IF NOT EXISTS idx_appointments_email ON appointments(email);\n    `;\n        // Create trigger to automatically update updatedAt\n        const createTrigger = `\n      CREATE TRIGGER IF NOT EXISTS update_appointments_updated_at\n      AFTER UPDATE ON appointments\n      BEGIN\n        UPDATE appointments SET updatedAt = datetime('now') WHERE id = NEW.id;\n      END\n    `;\n        this.db.exec(createAppointmentsTable);\n        this.db.exec(createIndexes);\n        this.db.exec(createTrigger);\n        // Check if servicePrice column exists, if not add it\n        try {\n            this.db.prepare(\"SELECT servicePrice FROM appointments LIMIT 1\").get();\n        } catch (error) {\n            // Column doesn't exist, add it\n            this.db.exec(\"ALTER TABLE appointments ADD COLUMN servicePrice REAL DEFAULT 0\");\n            console.log(\"Added servicePrice column to existing database\");\n        }\n    // Database is ready - no sample data needed\n    }\n    // Get service price from service name\n    getServicePrice(serviceName) {\n        const normalizedService = serviceName.toLowerCase().replace(/\\s+/g, \"-\");\n        return SERVICE_PRICES[normalizedService] || 0;\n    }\n    // Input validation and sanitization\n    validateAppointment(data) {\n        const errors = [];\n        if (data.firstName && (data.firstName.length === 0 || data.firstName.length > 50)) {\n            errors.push(\"First name must be between 1 and 50 characters\");\n        }\n        if (data.lastName && (data.lastName.length === 0 || data.lastName.length > 50)) {\n            errors.push(\"Last name must be between 1 and 50 characters\");\n        }\n        if (data.service && (data.service.length === 0 || data.service.length > 100)) {\n            errors.push(\"Service must be between 1 and 100 characters\");\n        }\n        if (data.servicePrice !== undefined && (data.servicePrice < 0 || data.servicePrice > 10000)) {\n            errors.push(\"Service price must be between $0 and $10,000\");\n        }\n        if (data.date && !/^\\d{4}-\\d{2}-\\d{2}$/.test(data.date)) {\n            errors.push(\"Date must be in YYYY-MM-DD format\");\n        }\n        if (data.time && !/^\\d{1,2}:\\d{2} [AP]M$/.test(data.time)) {\n            errors.push(\"Time must be in H:MM AM/PM or HH:MM AM/PM format\");\n        }\n        if (data.phone && (data.phone.length < 10 || data.phone.length > 20)) {\n            errors.push(\"Phone must be between 10 and 20 characters\");\n        }\n        if (data.email && (!data.email.includes(\"@\") || data.email.length > 100)) {\n            errors.push(\"Email must be valid and under 100 characters\");\n        }\n        if (data.notes && data.notes.length > 500) {\n            errors.push(\"Notes must be under 500 characters\");\n        }\n        if (data.status && ![\n            \"scheduled\",\n            \"completed\",\n            \"cancelled\",\n            \"no-show\"\n        ].includes(data.status)) {\n            errors.push(\"Status must be one of: scheduled, completed, cancelled, no-show\");\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    // Sanitize input to prevent injection attacks\n    sanitizeInput(input) {\n        return input.replace(/[<>]/g, \"\") // Remove potential HTML tags\n        .replace(/['\"]/g, \"\") // Remove quotes that could break SQL\n        .trim();\n    }\n    // Get all appointments with optional filtering\n    getAppointments(filters) {\n        let query = \"SELECT * FROM appointments\";\n        const params = [];\n        const conditions = [];\n        if (filters?.date) {\n            conditions.push(\"date = ?\");\n            params.push(filters.date);\n        }\n        if (filters?.status) {\n            conditions.push(\"status = ?\");\n            params.push(filters.status);\n        }\n        if (conditions.length > 0) {\n            query += \" WHERE \" + conditions.join(\" AND \");\n        }\n        query += \" ORDER BY date ASC, time ASC\";\n        const stmt = this.db.prepare(query);\n        return stmt.all(...params);\n    }\n    // Get appointment by ID\n    getAppointmentById(id) {\n        const stmt = this.db.prepare(\"SELECT * FROM appointments WHERE id = ?\");\n        return stmt.get(id);\n    }\n    // Create new appointment\n    createAppointment(data) {\n        const validation = this.validateAppointment(data);\n        if (!validation.isValid) {\n            return {\n                success: false,\n                errors: validation.errors\n            };\n        }\n        // Sanitize inputs and set service price\n        const sanitizedData = {\n            ...data,\n            firstName: this.sanitizeInput(data.firstName),\n            lastName: this.sanitizeInput(data.lastName),\n            service: this.sanitizeInput(data.service),\n            servicePrice: data.servicePrice || this.getServicePrice(data.service),\n            phone: this.sanitizeInput(data.phone),\n            email: this.sanitizeInput(data.email),\n            notes: data.notes ? this.sanitizeInput(data.notes) : null\n        };\n        const id = Date.now().toString() + Math.random().toString(36).substr(2, 9);\n        const now = new Date().toISOString();\n        try {\n            const stmt = this.db.prepare(`\n        INSERT INTO appointments (id, firstName, lastName, service, servicePrice, date, time, phone, email, notes, status, createdAt, updatedAt)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `);\n            stmt.run(id, sanitizedData.firstName, sanitizedData.lastName, sanitizedData.service, sanitizedData.servicePrice, sanitizedData.date, sanitizedData.time, sanitizedData.phone, sanitizedData.email, sanitizedData.notes, sanitizedData.status, now, now);\n            const appointment = this.getAppointmentById(id);\n            return {\n                success: true,\n                appointment: appointment\n            };\n        } catch (error) {\n            console.error(\"Database error:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to create appointment\"\n                ]\n            };\n        }\n    }\n    // Update appointment\n    updateAppointment(id, data) {\n        const validation = this.validateAppointment(data);\n        if (!validation.isValid) {\n            return {\n                success: false,\n                errors: validation.errors\n            };\n        }\n        // Check if appointment exists\n        const existing = this.getAppointmentById(id);\n        if (!existing) {\n            return {\n                success: false,\n                errors: [\n                    \"Appointment not found\"\n                ]\n            };\n        }\n        // Sanitize inputs\n        const sanitizedData = {\n            ...data\n        };\n        if (data.firstName) sanitizedData.firstName = this.sanitizeInput(data.firstName);\n        if (data.lastName) sanitizedData.lastName = this.sanitizeInput(data.lastName);\n        if (data.service) sanitizedData.service = this.sanitizeInput(data.service);\n        if (data.phone) sanitizedData.phone = this.sanitizeInput(data.phone);\n        if (data.email) sanitizedData.email = this.sanitizeInput(data.email);\n        if (data.notes) sanitizedData.notes = this.sanitizeInput(data.notes);\n        try {\n            const fields = Object.keys(sanitizedData).map((key)=>`${key} = ?`).join(\", \");\n            const values = Object.values(sanitizedData);\n            const stmt = this.db.prepare(`UPDATE appointments SET ${fields} WHERE id = ?`);\n            stmt.run(...values, id);\n            const appointment = this.getAppointmentById(id);\n            return {\n                success: true,\n                appointment: appointment\n            };\n        } catch (error) {\n            console.error(\"Database error:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to update appointment\"\n                ]\n            };\n        }\n    }\n    // Update appointment status only\n    updateAppointmentStatus(id, status) {\n        try {\n            const stmt = this.db.prepare(`\n        UPDATE appointments \n        SET status = ?, updatedAt = datetime('now')\n        WHERE id = ?\n      `);\n            const result = stmt.run(status, id);\n            if (result.changes === 0) {\n                return {\n                    success: false,\n                    errors: [\n                        \"Appointment not found\"\n                    ]\n                };\n            }\n            const appointment = this.getAppointmentById(id);\n            return {\n                success: true,\n                appointment: appointment\n            };\n        } catch (error) {\n            console.error(\"Database error:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to update appointment status\"\n                ]\n            };\n        }\n    }\n    // Delete appointment\n    deleteAppointment(id) {\n        try {\n            const stmt = this.db.prepare(\"DELETE FROM appointments WHERE id = ?\");\n            const result = stmt.run(id);\n            if (result.changes === 0) {\n                return {\n                    success: false,\n                    errors: [\n                        \"Appointment not found\"\n                    ]\n                };\n            }\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Database error:\", error);\n            return {\n                success: false,\n                errors: [\n                    \"Failed to delete appointment\"\n                ]\n            };\n        }\n    }\n    // Get appointment statistics\n    getStats() {\n        const total = this.db.prepare(\"SELECT COUNT(*) as count FROM appointments\").get();\n        const today = new Date().toISOString().split(\"T\")[0];\n        const todayCount = this.db.prepare(\"SELECT COUNT(*) as count FROM appointments WHERE date = ?\").get(today);\n        const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n        const thisWeekCount = this.db.prepare(\"SELECT COUNT(*) as count FROM appointments WHERE date >= ?\").get(weekAgo);\n        const byStatus = this.db.prepare(\"SELECT status, COUNT(*) as count FROM appointments GROUP BY status\").all();\n        const statusCounts = byStatus.reduce((acc, row)=>{\n            acc[row.status] = row.count;\n            return acc;\n        }, {});\n        // Completed revenue calculations\n        const totalRevenue = this.db.prepare(\"SELECT SUM(servicePrice) as revenue FROM appointments WHERE status = ?\").get(\"completed\");\n        const todayRevenue = this.db.prepare(\"SELECT SUM(servicePrice) as revenue FROM appointments WHERE date = ? AND status = ?\").get(today, \"completed\");\n        const thisWeekRevenue = this.db.prepare(\"SELECT SUM(servicePrice) as revenue FROM appointments WHERE date >= ? AND status = ?\").get(weekAgo, \"completed\");\n        // Pending revenue calculations (scheduled appointments)\n        const pendingRevenue = this.db.prepare(\"SELECT SUM(servicePrice) as revenue FROM appointments WHERE status = ?\").get(\"scheduled\");\n        const todayPendingRevenue = this.db.prepare(\"SELECT SUM(servicePrice) as revenue FROM appointments WHERE date = ? AND status = ?\").get(today, \"scheduled\");\n        const thisWeekPendingRevenue = this.db.prepare(\"SELECT SUM(servicePrice) as revenue FROM appointments WHERE date >= ? AND status = ?\").get(weekAgo, \"scheduled\");\n        return {\n            total: total.count,\n            today: todayCount.count,\n            thisWeek: thisWeekCount.count,\n            byStatus: statusCounts,\n            totalRevenue: totalRevenue.revenue || 0,\n            todayRevenue: todayRevenue.revenue || 0,\n            thisWeekRevenue: thisWeekRevenue.revenue || 0,\n            pendingRevenue: pendingRevenue.revenue || 0,\n            todayPendingRevenue: todayPendingRevenue.revenue || 0,\n            thisWeekPendingRevenue: thisWeekPendingRevenue.revenue || 0\n        };\n    }\n    // Close database connection\n    close() {\n        this.db.close();\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DatabaseManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/tslib","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fstats%2Froute&page=%2Fapi%2Fadmin%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fstats%2Froute.ts&appDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurafellemma%2FDesktop%2FFifi%20Hair%20Salon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();